{-# LANGUAGE NoMonomorphismRestriction #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE MagicHash #-}

module Data.Text.Lazy.AsLt where
-- generated by rvion/jetpack-gen 

import Data.Text.Lazy as I

lt_empty = I.empty
lt_foldlChunks = I.foldlChunks
lt_foldrChunks = I.foldrChunks
lt_all = I.all
lt_any = I.any
lt_append = I.append
lt_break = I.break
lt_breakOn = I.breakOn
lt_breakOnAll = I.breakOnAll
lt_breakOnEnd = I.breakOnEnd
lt_center = I.center
lt_chunksOf = I.chunksOf
lt_commonPrefixes = I.commonPrefixes
lt_compareLength = I.compareLength
lt_concat = I.concat
lt_concatMap = I.concatMap
lt_cons = I.cons
lt_count = I.count
lt_cycle = I.cycle
lt_drop = I.drop
lt_dropAround = I.dropAround
lt_dropEnd = I.dropEnd
lt_dropWhile = I.dropWhile
lt_dropWhileEnd = I.dropWhileEnd
lt_filter = I.filter
lt_find = I.find
lt_foldl = I.foldl
lt_foldl' = I.foldl'
lt_foldl1 = I.foldl1
lt_foldl1' = I.foldl1'
lt_foldr = I.foldr
lt_foldr1 = I.foldr1
lt_fromChunks = I.fromChunks
lt_fromStrict = I.fromStrict
lt_group = I.group
lt_groupBy = I.groupBy
lt_head = I.head
lt_index = I.index
lt_init = I.init
lt_inits = I.inits
lt_intercalate = I.intercalate
lt_intersperse = I.intersperse
lt_isInfixOf = I.isInfixOf
lt_isPrefixOf = I.isPrefixOf
lt_isSuffixOf = I.isSuffixOf
lt_iterate = I.iterate
lt_justifyLeft = I.justifyLeft
lt_justifyRight = I.justifyRight
lt_last = I.last
lt_length = I.length
lt_lines = I.lines
lt_map = I.map
lt_mapAccumL = I.mapAccumL
lt_mapAccumR = I.mapAccumR
lt_maximum = I.maximum
lt_minimum = I.minimum
lt_null = I.null
lt_pack = I.pack
lt_partition = I.partition
lt_repeat = I.repeat
lt_replace = I.replace
lt_replicate = I.replicate
lt_reverse = I.reverse
lt_scanl = I.scanl
lt_scanl1 = I.scanl1
lt_scanr = I.scanr
lt_scanr1 = I.scanr1
lt_singleton = I.singleton
lt_snoc = I.snoc
lt_span = I.span
lt_split = I.split
lt_splitAt = I.splitAt
lt_splitOn = I.splitOn
lt_strip = I.strip
lt_stripEnd = I.stripEnd
lt_stripPrefix = I.stripPrefix
lt_stripStart = I.stripStart
lt_stripSuffix = I.stripSuffix
lt_tail = I.tail
lt_tails = I.tails
lt_take = I.take
lt_takeEnd = I.takeEnd
lt_takeWhile = I.takeWhile
lt_toCaseFold = I.toCaseFold
lt_toChunks = I.toChunks
lt_toLower = I.toLower
lt_toStrict = I.toStrict
lt_toTitle = I.toTitle
lt_toUpper = I.toUpper
lt_transpose = I.transpose
lt_uncons = I.uncons
lt_unfoldr = I.unfoldr
lt_unfoldrN = I.unfoldrN
lt_unlines = I.unlines
lt_unpack = I.unpack
lt_unwords = I.unwords
lt_words = I.words
lt_zip = I.zip
lt_zipWith = I.zipWith
