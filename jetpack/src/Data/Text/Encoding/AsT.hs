module Data.Text.Encoding.AsT where
-- generated by rvion/jetpack-gen 

import Data.Text.Encoding as I

-- t_decodeLatin1 :: ByteString -> Text
t_decodeLatin1 = I.decodeLatin1
-- t_decodeUtf16BE :: ByteString -> Text
t_decodeUtf16BE = I.decodeUtf16BE
-- t_decodeUtf16BEWith :: OnDecodeError -> ByteString -> Text
t_decodeUtf16BEWith = I.decodeUtf16BEWith
-- t_decodeUtf16LE :: ByteString -> Text
t_decodeUtf16LE = I.decodeUtf16LE
-- t_decodeUtf16LEWith :: OnDecodeError -> ByteString -> Text
t_decodeUtf16LEWith = I.decodeUtf16LEWith
-- t_decodeUtf32BE :: ByteString -> Text
t_decodeUtf32BE = I.decodeUtf32BE
-- t_decodeUtf32BEWith :: OnDecodeError -> ByteString -> Text
t_decodeUtf32BEWith = I.decodeUtf32BEWith
-- t_decodeUtf32LE :: ByteString -> Text
t_decodeUtf32LE = I.decodeUtf32LE
-- t_decodeUtf32LEWith :: OnDecodeError -> ByteString -> Text
t_decodeUtf32LEWith = I.decodeUtf32LEWith
-- t_decodeUtf8 :: ByteString -> Text
t_decodeUtf8 = I.decodeUtf8
-- t_decodeUtf8' :: ByteString -> Either UnicodeException Text
t_decodeUtf8' = I.decodeUtf8'
-- t_decodeUtf8With :: OnDecodeError -> ByteString -> Text
t_decodeUtf8With = I.decodeUtf8With
-- t_encodeUtf16BE :: Text -> ByteString
t_encodeUtf16BE = I.encodeUtf16BE
-- t_encodeUtf16LE :: Text -> ByteString
t_encodeUtf16LE = I.encodeUtf16LE
-- t_encodeUtf32BE :: Text -> ByteString
t_encodeUtf32BE = I.encodeUtf32BE
-- t_encodeUtf32LE :: Text -> ByteString
t_encodeUtf32LE = I.encodeUtf32LE
-- t_encodeUtf8 :: Text -> ByteString
t_encodeUtf8 = I.encodeUtf8
-- t_encodeUtf8Builder :: Text -> Builder
t_encodeUtf8Builder = I.encodeUtf8Builder
-- t_encodeUtf8BuilderEscaped :: BoundedPrim Word8 -> Text -> Builder
t_encodeUtf8BuilderEscaped = I.encodeUtf8BuilderEscaped
-- t_streamDecodeUtf8 :: ByteString -> Decoding
t_streamDecodeUtf8 = I.streamDecodeUtf8
-- t_streamDecodeUtf8With :: OnDecodeError -> ByteString -> Decoding
t_streamDecodeUtf8With = I.streamDecodeUtf8With
type TDecoding  = I.Decoding 
