module Data.Aeson.Types.AsJs where
-- generated by https://github.com/rvion/ride/tree/master/jetpack-gen

import qualified Data.Aeson.Types as I

-- js_typeMismatch :: forall a. String -> Value -> Parser a
js_typeMismatch = I.typeMismatch

-- js_camelTo :: Char -> String -> String
js_camelTo = I.camelTo

-- js_defaultOptions :: Options
js_defaultOptions = I.defaultOptions

-- js_defaultTaggedObject :: SumEncoding
js_defaultTaggedObject = I.defaultTaggedObject

-- js_emptyArray :: Value
js_emptyArray = I.emptyArray

-- js_emptyObject :: Value
js_emptyObject = I.emptyObject

-- js_modifyFailure :: forall a. (String -> String) -> Parser a -> Parser a
js_modifyFailure = I.modifyFailure

-- js_parse :: forall a b. (a -> Parser b) -> a -> Result b
js_parse = I.parse

-- js_parseEither :: forall a b. (a -> Parser b) -> a -> Either String b
js_parseEither = I.parseEither

-- js_parseMaybe :: forall a b. (a -> Parser b) -> a -> Maybe b
js_parseMaybe = I.parseMaybe

type JsOptions  = I.Options
-- js_allNullaryToStringTag :: Options -> Bool
js_allNullaryToStringTag = I.allNullaryToStringTag

-- js_constructorTagModifier :: Options -> String -> String
js_constructorTagModifier = I.constructorTagModifier

-- js_fieldLabelModifier :: Options -> String -> String
js_fieldLabelModifier = I.fieldLabelModifier

-- js_omitNothingFields :: Options -> Bool
js_omitNothingFields = I.omitNothingFields

-- js_sumEncoding :: Options -> SumEncoding
js_sumEncoding = I.sumEncoding

type JsPair  = I.Pair
type JsParser a = I.Parser a
type JsSumEncoding  = I.SumEncoding
-- js_contentsFieldName :: SumEncoding -> String
js_contentsFieldName = I.contentsFieldName

-- js_tagFieldName :: SumEncoding -> String
js_tagFieldName = I.tagFieldName

