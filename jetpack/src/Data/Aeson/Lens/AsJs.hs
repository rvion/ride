module Data.Aeson.Lens.AsJs where
-- generated by https://github.com/rvion/ride/tree/master/jetpack-gen

import qualified Data.Aeson.Lens as I

-- js__Integral :: forall t a. (AsNumber t, Integral a) => Prism' t a
js__Integral = I._Integral

-- js_key :: forall t. AsValue t => Text -> Traversal' t Value
js_key = I.key

-- js_members :: forall t. AsValue t => IndexedTraversal' Text t Value
js_members = I.members

-- js_nonNull :: Prism' Value Value
js_nonNull = I.nonNull

-- js_nth :: forall t. AsValue t => Int -> Traversal' t Value
js_nth = I.nth

-- js_values :: forall t. AsValue t => IndexedTraversal' Int t Value
js_values = I.values

-- js__JSON :: forall a. (FromJSON a, ToJSON a) => Prism' t a
js__JSON = I._JSON

-- js__Number :: Prism' t Scientific
js__Number = I._Number

-- js__Double :: Prism' t Double
js__Double = I._Double

-- js__Integer :: Prism' t Integer
js__Integer = I._Integer

-- js__Primitive :: Prism' t Primitive
js__Primitive = I._Primitive

-- js__String :: Prism' t Text
js__String = I._String

-- js__Bool :: Prism' t Bool
js__Bool = I._Bool

-- js__Null :: Prism' t ()
js__Null = I._Null

-- js__Value :: Prism' t Value
js__Value = I._Value

-- js__Object :: Prism' t (HashMap Text Value)
js__Object = I._Object

-- js__Array :: Prism' t (Vector Value)
js__Array = I._Array

type JsPrimitive  = I.Primitive
js__mkStringPrim =  I.StringPrim-- constructor
pattern JsStringPrim a <-  I.StringPrim a
js__mkNumberPrim =  I.NumberPrim-- constructor
pattern JsNumberPrim a <-  I.NumberPrim a
js__mkBoolPrim =  I.BoolPrim-- constructor
pattern JsBoolPrim a <-  I.BoolPrim a
js__mkNullPrim =  I.NullPrim-- constructor
pattern JsNullPrim  <-  I.NullPrim 
