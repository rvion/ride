{-# LANGUAGE NoMonomorphismRestriction #-}

module Data.List.NonEmpty.AsNe where
-- generated by rvion/jetpack-gen 

import Data.List.NonEmpty as I

type Ne_NonEmpty = I.NonEmpty
ne_break =  I.break
ne_cons =  I.cons
ne_cycle =  I.cycle
ne_drop =  I.drop
ne_dropWhile =  I.dropWhile
ne_filter =  I.filter
ne_fromList =  I.fromList
ne_group =  I.group
ne_group1 =  I.group1
ne_groupAllWith =  I.groupAllWith
ne_groupAllWith1 =  I.groupAllWith1
ne_groupBy =  I.groupBy
ne_groupBy1 =  I.groupBy1
ne_groupWith =  I.groupWith
ne_groupWith1 =  I.groupWith1
ne_head =  I.head
ne_init =  I.init
ne_inits =  I.inits
ne_insert =  I.insert
ne_intersperse =  I.intersperse
ne_isPrefixOf =  I.isPrefixOf
ne_iterate =  I.iterate
ne_last =  I.last
ne_length =  I.length
ne_lines =  I.lines
ne_map =  I.map
ne_nonEmpty =  I.nonEmpty
ne_nub =  I.nub
ne_nubBy =  I.nubBy
ne_partition =  I.partition
ne_repeat =  I.repeat
ne_reverse =  I.reverse
ne_scanl =  I.scanl
ne_scanl1 =  I.scanl1
ne_scanr =  I.scanr
ne_scanr1 =  I.scanr1
ne_some1 =  I.some1
ne_sort =  I.sort
ne_sortBy =  I.sortBy
ne_sortWith =  I.sortWith
ne_span =  I.span
ne_splitAt =  I.splitAt
ne_tail =  I.tail
ne_tails =  I.tails
ne_take =  I.take
ne_takeWhile =  I.takeWhile
ne_toList =  I.toList
ne_transpose =  I.transpose
ne_uncons =  I.uncons
ne_unfold =  I.unfold
ne_unfoldr =  I.unfoldr
ne_unlines =  I.unlines
ne_unwords =  I.unwords
ne_unzip =  I.unzip
ne_words =  I.words
ne_xor =  I.xor
ne_zip =  I.zip
ne_zipWith =  I.zipWith
