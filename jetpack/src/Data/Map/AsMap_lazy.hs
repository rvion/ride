module Data.Map.AsMap_lazy where
-- generated by rvion/jetpack-gen

import Data.Map as I

map_lazy_fold = I.fold
map_lazy_foldWithKey = I.foldWithKey
map_lazy_insertLookupWithKey' = I.insertLookupWithKey'
map_lazy_insertWith' = I.insertWith'
map_lazy_insertWithKey' = I.insertWithKey'
(!) = (I.!)
(\\) = (I.\\)
map_lazy_adjust = I.adjust
map_lazy_adjustWithKey = I.adjustWithKey
map_lazy_alter = I.alter
map_lazy_assocs = I.assocs
map_lazy_delete = I.delete
map_lazy_deleteAt = I.deleteAt
map_lazy_deleteFindMax = I.deleteFindMax
map_lazy_deleteFindMin = I.deleteFindMin
map_lazy_deleteMax = I.deleteMax
map_lazy_deleteMin = I.deleteMin
map_lazy_difference = I.difference
map_lazy_differenceWith = I.differenceWith
map_lazy_differenceWithKey = I.differenceWithKey
map_lazy_elemAt = I.elemAt
map_lazy_elems = I.elems
map_lazy_empty = I.empty
map_lazy_filter = I.filter
map_lazy_filterWithKey = I.filterWithKey
map_lazy_findIndex = I.findIndex
map_lazy_findMax = I.findMax
map_lazy_findMin = I.findMin
map_lazy_findWithDefault = I.findWithDefault
map_lazy_foldMapWithKey = I.foldMapWithKey
map_lazy_foldl = I.foldl
map_lazy_foldl' = I.foldl'
map_lazy_foldlWithKey = I.foldlWithKey
map_lazy_foldlWithKey' = I.foldlWithKey'
map_lazy_foldr = I.foldr
map_lazy_foldr' = I.foldr'
map_lazy_foldrWithKey = I.foldrWithKey
map_lazy_foldrWithKey' = I.foldrWithKey'
map_lazy_fromAscList = I.fromAscList
map_lazy_fromAscListWith = I.fromAscListWith
map_lazy_fromAscListWithKey = I.fromAscListWithKey
map_lazy_fromDistinctAscList = I.fromDistinctAscList
map_lazy_fromList = I.fromList
map_lazy_fromListWith = I.fromListWith
map_lazy_fromListWithKey = I.fromListWithKey
map_lazy_fromSet = I.fromSet
map_lazy_insert = I.insert
map_lazy_insertLookupWithKey = I.insertLookupWithKey
map_lazy_insertWith = I.insertWith
map_lazy_insertWithKey = I.insertWithKey
map_lazy_intersection = I.intersection
map_lazy_intersectionWith = I.intersectionWith
map_lazy_intersectionWithKey = I.intersectionWithKey
map_lazy_isProperSubmapOf = I.isProperSubmapOf
map_lazy_isProperSubmapOfBy = I.isProperSubmapOfBy
map_lazy_isSubmapOf = I.isSubmapOf
map_lazy_isSubmapOfBy = I.isSubmapOfBy
map_lazy_keys = I.keys
map_lazy_keysSet = I.keysSet
map_lazy_lookup = I.lookup
map_lazy_lookupGE = I.lookupGE
map_lazy_lookupGT = I.lookupGT
map_lazy_lookupIndex = I.lookupIndex
map_lazy_lookupLE = I.lookupLE
map_lazy_lookupLT = I.lookupLT
map_lazy_map = I.map
map_lazy_mapAccum = I.mapAccum
map_lazy_mapAccumRWithKey = I.mapAccumRWithKey
map_lazy_mapAccumWithKey = I.mapAccumWithKey
map_lazy_mapEither = I.mapEither
map_lazy_mapEitherWithKey = I.mapEitherWithKey
map_lazy_mapKeys = I.mapKeys
map_lazy_mapKeysMonotonic = I.mapKeysMonotonic
map_lazy_mapKeysWith = I.mapKeysWith
map_lazy_mapMaybe = I.mapMaybe
map_lazy_mapMaybeWithKey = I.mapMaybeWithKey
map_lazy_mapWithKey = I.mapWithKey
map_lazy_maxView = I.maxView
map_lazy_maxViewWithKey = I.maxViewWithKey
map_lazy_member = I.member
map_lazy_mergeWithKey = I.mergeWithKey
map_lazy_minView = I.minView
map_lazy_minViewWithKey = I.minViewWithKey
map_lazy_notMember = I.notMember
map_lazy_null = I.null
map_lazy_partition = I.partition
map_lazy_partitionWithKey = I.partitionWithKey
map_lazy_showTree = I.showTree
map_lazy_showTreeWith = I.showTreeWith
map_lazy_singleton = I.singleton
map_lazy_size = I.size
map_lazy_split = I.split
map_lazy_splitLookup = I.splitLookup
map_lazy_splitRoot = I.splitRoot
map_lazy_toAscList = I.toAscList
map_lazy_toDescList = I.toDescList
map_lazy_toList = I.toList
map_lazy_traverseWithKey = I.traverseWithKey
map_lazy_union = I.union
map_lazy_unionWith = I.unionWith
map_lazy_unionWithKey = I.unionWithKey
map_lazy_unions = I.unions
map_lazy_unionsWith = I.unionsWith
map_lazy_update = I.update
map_lazy_updateAt = I.updateAt
map_lazy_updateLookupWithKey = I.updateLookupWithKey
map_lazy_updateMax = I.updateMax
map_lazy_updateMaxWithKey = I.updateMaxWithKey
map_lazy_updateMin = I.updateMin
map_lazy_updateMinWithKey = I.updateMinWithKey
map_lazy_updateWithKey = I.updateWithKey
map_lazy_valid = I.valid
type Map_lazyMap a b = I.Map a b
