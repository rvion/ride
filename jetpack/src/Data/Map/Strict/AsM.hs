module Data.Map.Strict.AsM where
-- generated by rvion/jetpack-gen 

import Data.Map.Strict as I

(!) = (I.!)
(\\) = (I.\\)
m_assocs = I.assocs
m_delete = I.delete
m_deleteAt = I.deleteAt
m_deleteFindMax = I.deleteFindMax
m_deleteFindMin = I.deleteFindMin
m_deleteMax = I.deleteMax
m_deleteMin = I.deleteMin
m_difference = I.difference
m_elemAt = I.elemAt
m_elems = I.elems
m_empty = I.empty
m_filter = I.filter
m_filterWithKey = I.filterWithKey
m_findIndex = I.findIndex
m_findMax = I.findMax
m_findMin = I.findMin
m_foldMapWithKey = I.foldMapWithKey
m_foldl = I.foldl
m_foldl' = I.foldl'
m_foldlWithKey = I.foldlWithKey
m_foldlWithKey' = I.foldlWithKey'
m_foldr = I.foldr
m_foldr' = I.foldr'
m_foldrWithKey = I.foldrWithKey
m_foldrWithKey' = I.foldrWithKey'
m_intersection = I.intersection
m_isProperSubmapOf = I.isProperSubmapOf
m_isProperSubmapOfBy = I.isProperSubmapOfBy
m_isSubmapOf = I.isSubmapOf
m_isSubmapOfBy = I.isSubmapOfBy
m_keys = I.keys
m_keysSet = I.keysSet
m_lookup = I.lookup
m_lookupGE = I.lookupGE
m_lookupGT = I.lookupGT
m_lookupIndex = I.lookupIndex
m_lookupLE = I.lookupLE
m_lookupLT = I.lookupLT
m_mapKeys = I.mapKeys
m_mapKeysMonotonic = I.mapKeysMonotonic
m_maxView = I.maxView
m_maxViewWithKey = I.maxViewWithKey
m_member = I.member
m_minView = I.minView
m_minViewWithKey = I.minViewWithKey
m_notMember = I.notMember
m_null = I.null
m_partition = I.partition
m_partitionWithKey = I.partitionWithKey
m_showTree = I.showTree
m_showTreeWith = I.showTreeWith
m_size = I.size
m_split = I.split
m_splitLookup = I.splitLookup
m_splitRoot = I.splitRoot
m_toAscList = I.toAscList
m_toDescList = I.toDescList
m_toList = I.toList
m_traverseWithKey = I.traverseWithKey
m_union = I.union
m_unions = I.unions
m_valid = I.valid
m_adjust = I.adjust
m_adjustWithKey = I.adjustWithKey
m_alter = I.alter
m_differenceWith = I.differenceWith
m_differenceWithKey = I.differenceWithKey
m_findWithDefault = I.findWithDefault
m_fromAscList = I.fromAscList
m_fromAscListWith = I.fromAscListWith
m_fromAscListWithKey = I.fromAscListWithKey
m_fromDistinctAscList = I.fromDistinctAscList
m_fromList = I.fromList
m_fromListWith = I.fromListWith
m_fromListWithKey = I.fromListWithKey
m_fromSet = I.fromSet
m_insert = I.insert
m_insertLookupWithKey = I.insertLookupWithKey
m_insertWith = I.insertWith
m_insertWithKey = I.insertWithKey
m_intersectionWith = I.intersectionWith
m_intersectionWithKey = I.intersectionWithKey
m_map = I.map
m_mapAccum = I.mapAccum
m_mapAccumRWithKey = I.mapAccumRWithKey
m_mapAccumWithKey = I.mapAccumWithKey
m_mapEither = I.mapEither
m_mapEitherWithKey = I.mapEitherWithKey
m_mapKeysWith = I.mapKeysWith
m_mapMaybe = I.mapMaybe
m_mapMaybeWithKey = I.mapMaybeWithKey
m_mapWithKey = I.mapWithKey
m_mergeWithKey = I.mergeWithKey
m_singleton = I.singleton
m_unionWith = I.unionWith
m_unionWithKey = I.unionWithKey
m_unionsWith = I.unionsWith
m_update = I.update
m_updateAt = I.updateAt
m_updateLookupWithKey = I.updateLookupWithKey
m_updateMax = I.updateMax
m_updateMaxWithKey = I.updateMaxWithKey
m_updateMin = I.updateMin
m_updateMinWithKey = I.updateMinWithKey
m_updateWithKey = I.updateWithKey
type MMap a b = I.Map a b
