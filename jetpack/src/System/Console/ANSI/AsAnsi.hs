module System.Console.ANSI.AsAnsi where
-- generated by https://github.com/rvion/ride/tree/master/jetpack-gen

import qualified System.Console.ANSI as I

-- ansi_clearFromCursorToLineBeginning :: IO ()
ansi_clearFromCursorToLineBeginning = I.clearFromCursorToLineBeginning

-- ansi_clearFromCursorToLineBeginningCode :: String
ansi_clearFromCursorToLineBeginningCode = I.clearFromCursorToLineBeginningCode

-- ansi_clearFromCursorToLineEnd :: IO ()
ansi_clearFromCursorToLineEnd = I.clearFromCursorToLineEnd

-- ansi_clearFromCursorToLineEndCode :: String
ansi_clearFromCursorToLineEndCode = I.clearFromCursorToLineEndCode

-- ansi_clearFromCursorToScreenBeginning :: IO ()
ansi_clearFromCursorToScreenBeginning = I.clearFromCursorToScreenBeginning

-- ansi_clearFromCursorToScreenBeginningCode :: String
ansi_clearFromCursorToScreenBeginningCode = I.clearFromCursorToScreenBeginningCode

-- ansi_clearFromCursorToScreenEnd :: IO ()
ansi_clearFromCursorToScreenEnd = I.clearFromCursorToScreenEnd

-- ansi_clearFromCursorToScreenEndCode :: String
ansi_clearFromCursorToScreenEndCode = I.clearFromCursorToScreenEndCode

-- ansi_clearLine :: IO ()
ansi_clearLine = I.clearLine

-- ansi_clearLineCode :: String
ansi_clearLineCode = I.clearLineCode

-- ansi_clearScreen :: IO ()
ansi_clearScreen = I.clearScreen

-- ansi_clearScreenCode :: String
ansi_clearScreenCode = I.clearScreenCode

-- ansi_cursorBackward :: Int -> IO ()
ansi_cursorBackward = I.cursorBackward

-- ansi_cursorBackwardCode :: Int -> String
ansi_cursorBackwardCode = I.cursorBackwardCode

-- ansi_cursorDown :: Int -> IO ()
ansi_cursorDown = I.cursorDown

-- ansi_cursorDownCode :: Int -> String
ansi_cursorDownCode = I.cursorDownCode

-- ansi_cursorDownLine :: Int -> IO ()
ansi_cursorDownLine = I.cursorDownLine

-- ansi_cursorDownLineCode :: Int -> String
ansi_cursorDownLineCode = I.cursorDownLineCode

-- ansi_cursorForward :: Int -> IO ()
ansi_cursorForward = I.cursorForward

-- ansi_cursorForwardCode :: Int -> String
ansi_cursorForwardCode = I.cursorForwardCode

-- ansi_cursorUp :: Int -> IO ()
ansi_cursorUp = I.cursorUp

-- ansi_cursorUpCode :: Int -> String
ansi_cursorUpCode = I.cursorUpCode

-- ansi_cursorUpLine :: Int -> IO ()
ansi_cursorUpLine = I.cursorUpLine

-- ansi_cursorUpLineCode :: Int -> String
ansi_cursorUpLineCode = I.cursorUpLineCode

-- ansi_hClearFromCursorToLineBeginning :: Handle -> IO ()
ansi_hClearFromCursorToLineBeginning = I.hClearFromCursorToLineBeginning

-- ansi_hClearFromCursorToLineEnd :: Handle -> IO ()
ansi_hClearFromCursorToLineEnd = I.hClearFromCursorToLineEnd

-- ansi_hClearFromCursorToScreenBeginning :: Handle -> IO ()
ansi_hClearFromCursorToScreenBeginning = I.hClearFromCursorToScreenBeginning

-- ansi_hClearFromCursorToScreenEnd :: Handle -> IO ()
ansi_hClearFromCursorToScreenEnd = I.hClearFromCursorToScreenEnd

-- ansi_hClearLine :: Handle -> IO ()
ansi_hClearLine = I.hClearLine

-- ansi_hClearScreen :: Handle -> IO ()
ansi_hClearScreen = I.hClearScreen

-- ansi_hCursorBackward :: Handle -> Int -> IO ()
ansi_hCursorBackward = I.hCursorBackward

-- ansi_hCursorDown :: Handle -> Int -> IO ()
ansi_hCursorDown = I.hCursorDown

-- ansi_hCursorDownLine :: Handle -> Int -> IO ()
ansi_hCursorDownLine = I.hCursorDownLine

-- ansi_hCursorForward :: Handle -> Int -> IO ()
ansi_hCursorForward = I.hCursorForward

-- ansi_hCursorUp :: Handle -> Int -> IO ()
ansi_hCursorUp = I.hCursorUp

-- ansi_hCursorUpLine :: Handle -> Int -> IO ()
ansi_hCursorUpLine = I.hCursorUpLine

-- ansi_hHideCursor :: Handle -> IO ()
ansi_hHideCursor = I.hHideCursor

-- ansi_hScrollPageDown :: Handle -> Int -> IO ()
ansi_hScrollPageDown = I.hScrollPageDown

-- ansi_hScrollPageUp :: Handle -> Int -> IO ()
ansi_hScrollPageUp = I.hScrollPageUp

-- ansi_hSetCursorColumn :: Handle -> Int -> IO ()
ansi_hSetCursorColumn = I.hSetCursorColumn

-- ansi_hSetCursorPosition :: Handle -> Int -> Int -> IO ()
ansi_hSetCursorPosition = I.hSetCursorPosition

-- ansi_hSetSGR :: Handle -> [SGR] -> IO ()
ansi_hSetSGR = I.hSetSGR

-- ansi_hSetTitle :: Handle -> String -> IO ()
ansi_hSetTitle = I.hSetTitle

-- ansi_hShowCursor :: Handle -> IO ()
ansi_hShowCursor = I.hShowCursor

-- ansi_hSupportsANSI :: Handle -> IO Bool
ansi_hSupportsANSI = I.hSupportsANSI

-- ansi_hideCursor :: IO ()
ansi_hideCursor = I.hideCursor

-- ansi_hideCursorCode :: String
ansi_hideCursorCode = I.hideCursorCode

-- ansi_scrollPageDown :: Int -> IO ()
ansi_scrollPageDown = I.scrollPageDown

-- ansi_scrollPageDownCode :: Int -> String
ansi_scrollPageDownCode = I.scrollPageDownCode

-- ansi_scrollPageUp :: Int -> IO ()
ansi_scrollPageUp = I.scrollPageUp

-- ansi_scrollPageUpCode :: Int -> String
ansi_scrollPageUpCode = I.scrollPageUpCode

-- ansi_setCursorColumn :: Int -> IO ()
ansi_setCursorColumn = I.setCursorColumn

-- ansi_setCursorColumnCode :: Int -> String
ansi_setCursorColumnCode = I.setCursorColumnCode

-- ansi_setCursorPosition :: Int -> Int -> IO ()
ansi_setCursorPosition = I.setCursorPosition

-- ansi_setCursorPositionCode :: Int -> Int -> String
ansi_setCursorPositionCode = I.setCursorPositionCode

-- ansi_setSGR :: [SGR] -> IO ()
ansi_setSGR = I.setSGR

-- ansi_setSGRCode :: [SGR] -> String
ansi_setSGRCode = I.setSGRCode

-- ansi_setTitle :: String -> IO ()
ansi_setTitle = I.setTitle

-- ansi_setTitleCode :: String -> String
ansi_setTitleCode = I.setTitleCode

-- ansi_showCursor :: IO ()
ansi_showCursor = I.showCursor

-- ansi_showCursorCode :: String
ansi_showCursorCode = I.showCursorCode

type AnsiBlinkSpeed  = I.BlinkSpeed
type AnsiColor  = I.Color
type AnsiColorIntensity  = I.ColorIntensity
type AnsiConsoleIntensity  = I.ConsoleIntensity
type AnsiConsoleLayer  = I.ConsoleLayer
type AnsiSGR  = I.SGR
type AnsiUnderlining  = I.Underlining
