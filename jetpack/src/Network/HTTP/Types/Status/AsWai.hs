module Network.HTTP.Types.Status.AsWai
  ( module Network.HTTP.Types.Status.AsWai
  ) where
-- generated by https://github.com/rvion/ride/tree/master/jetpack-gen

import qualified Network.HTTP.Types.Status as I


-- wai_accepted202 :: Status
wai_accepted202 = I.accepted202

-- wai_badGateway502 :: Status
wai_badGateway502 = I.badGateway502

-- wai_badRequest400 :: Status
wai_badRequest400 = I.badRequest400

-- wai_conflict409 :: Status
wai_conflict409 = I.conflict409

-- wai_continue100 :: Status
wai_continue100 = I.continue100

-- wai_created201 :: Status
wai_created201 = I.created201

-- wai_expectationFailed417 :: Status
wai_expectationFailed417 = I.expectationFailed417

-- wai_forbidden403 :: Status
wai_forbidden403 = I.forbidden403

-- wai_found302 :: Status
wai_found302 = I.found302

-- wai_gatewayTimeout504 :: Status
wai_gatewayTimeout504 = I.gatewayTimeout504

-- wai_gone410 :: Status
wai_gone410 = I.gone410

-- wai_httpVersionNotSupported505 :: Status
wai_httpVersionNotSupported505 = I.httpVersionNotSupported505

-- wai_imATeaPot418 :: Status
wai_imATeaPot418 = I.imATeaPot418

-- wai_internalServerError500 :: Status
wai_internalServerError500 = I.internalServerError500

-- wai_lengthRequired411 :: Status
wai_lengthRequired411 = I.lengthRequired411

-- wai_methodNotAllowed405 :: Status
wai_methodNotAllowed405 = I.methodNotAllowed405

-- wai_mkStatus :: Int -> ByteString -> Status
wai_mkStatus = I.mkStatus

-- wai_movedPermanently301 :: Status
wai_movedPermanently301 = I.movedPermanently301

-- wai_multipleChoices300 :: Status
wai_multipleChoices300 = I.multipleChoices300

-- wai_networkAuthenticationRequired511 :: Status
wai_networkAuthenticationRequired511 = I.networkAuthenticationRequired511

-- wai_noContent204 :: Status
wai_noContent204 = I.noContent204

-- wai_nonAuthoritative203 :: Status
wai_nonAuthoritative203 = I.nonAuthoritative203

-- wai_notAcceptable406 :: Status
wai_notAcceptable406 = I.notAcceptable406

-- wai_notFound404 :: Status
wai_notFound404 = I.notFound404

-- wai_notImplemented501 :: Status
wai_notImplemented501 = I.notImplemented501

-- wai_notModified304 :: Status
wai_notModified304 = I.notModified304

-- wai_ok200 :: Status
wai_ok200 = I.ok200

-- wai_partialContent206 :: Status
wai_partialContent206 = I.partialContent206

-- wai_paymentRequired402 :: Status
wai_paymentRequired402 = I.paymentRequired402

-- wai_preconditionFailed412 :: Status
wai_preconditionFailed412 = I.preconditionFailed412

-- wai_preconditionRequired428 :: Status
wai_preconditionRequired428 = I.preconditionRequired428

-- wai_proxyAuthenticationRequired407 :: Status
wai_proxyAuthenticationRequired407 = I.proxyAuthenticationRequired407

-- wai_requestEntityTooLarge413 :: Status
wai_requestEntityTooLarge413 = I.requestEntityTooLarge413

-- wai_requestHeaderFieldsTooLarge431 :: Status
wai_requestHeaderFieldsTooLarge431 = I.requestHeaderFieldsTooLarge431

-- wai_requestTimeout408 :: Status
wai_requestTimeout408 = I.requestTimeout408

-- wai_requestURITooLong414 :: Status
wai_requestURITooLong414 = I.requestURITooLong414

-- wai_requestedRangeNotSatisfiable416 :: Status
wai_requestedRangeNotSatisfiable416 = I.requestedRangeNotSatisfiable416

-- wai_resetContent205 :: Status
wai_resetContent205 = I.resetContent205

-- wai_seeOther303 :: Status
wai_seeOther303 = I.seeOther303

-- wai_serviceUnavailable503 :: Status
wai_serviceUnavailable503 = I.serviceUnavailable503

-- wai_status100 :: Status
wai_status100 = I.status100

-- wai_status101 :: Status
wai_status101 = I.status101

-- wai_status200 :: Status
wai_status200 = I.status200

-- wai_status201 :: Status
wai_status201 = I.status201

-- wai_status202 :: Status
wai_status202 = I.status202

-- wai_status203 :: Status
wai_status203 = I.status203

-- wai_status204 :: Status
wai_status204 = I.status204

-- wai_status205 :: Status
wai_status205 = I.status205

-- wai_status206 :: Status
wai_status206 = I.status206

-- wai_status300 :: Status
wai_status300 = I.status300

-- wai_status301 :: Status
wai_status301 = I.status301

-- wai_status302 :: Status
wai_status302 = I.status302

-- wai_status303 :: Status
wai_status303 = I.status303

-- wai_status304 :: Status
wai_status304 = I.status304

-- wai_status305 :: Status
wai_status305 = I.status305

-- wai_status307 :: Status
wai_status307 = I.status307

-- wai_status400 :: Status
wai_status400 = I.status400

-- wai_status401 :: Status
wai_status401 = I.status401

-- wai_status402 :: Status
wai_status402 = I.status402

-- wai_status403 :: Status
wai_status403 = I.status403

-- wai_status404 :: Status
wai_status404 = I.status404

-- wai_status405 :: Status
wai_status405 = I.status405

-- wai_status406 :: Status
wai_status406 = I.status406

-- wai_status407 :: Status
wai_status407 = I.status407

-- wai_status408 :: Status
wai_status408 = I.status408

-- wai_status409 :: Status
wai_status409 = I.status409

-- wai_status410 :: Status
wai_status410 = I.status410

-- wai_status411 :: Status
wai_status411 = I.status411

-- wai_status412 :: Status
wai_status412 = I.status412

-- wai_status413 :: Status
wai_status413 = I.status413

-- wai_status414 :: Status
wai_status414 = I.status414

-- wai_status415 :: Status
wai_status415 = I.status415

-- wai_status416 :: Status
wai_status416 = I.status416

-- wai_status417 :: Status
wai_status417 = I.status417

-- wai_status418 :: Status
wai_status418 = I.status418

-- wai_status428 :: Status
wai_status428 = I.status428

-- wai_status429 :: Status
wai_status429 = I.status429

-- wai_status431 :: Status
wai_status431 = I.status431

-- wai_status500 :: Status
wai_status500 = I.status500

-- wai_status501 :: Status
wai_status501 = I.status501

-- wai_status502 :: Status
wai_status502 = I.status502

-- wai_status503 :: Status
wai_status503 = I.status503

-- wai_status504 :: Status
wai_status504 = I.status504

-- wai_status505 :: Status
wai_status505 = I.status505

-- wai_status511 :: Status
wai_status511 = I.status511

-- wai_statusIsClientError :: Status -> Bool
wai_statusIsClientError = I.statusIsClientError

-- wai_statusIsInformational :: Status -> Bool
wai_statusIsInformational = I.statusIsInformational

-- wai_statusIsRedirection :: Status -> Bool
wai_statusIsRedirection = I.statusIsRedirection

-- wai_statusIsServerError :: Status -> Bool
wai_statusIsServerError = I.statusIsServerError

-- wai_statusIsSuccessful :: Status -> Bool
wai_statusIsSuccessful = I.statusIsSuccessful

-- wai_switchingProtocols101 :: Status
wai_switchingProtocols101 = I.switchingProtocols101

-- wai_temporaryRedirect307 :: Status
wai_temporaryRedirect307 = I.temporaryRedirect307

-- wai_tooManyRequests429 :: Status
wai_tooManyRequests429 = I.tooManyRequests429

-- wai_unauthorized401 :: Status
wai_unauthorized401 = I.unauthorized401

-- wai_unsupportedMediaType415 :: Status
wai_unsupportedMediaType415 = I.unsupportedMediaType415

-- wai_useProxy305 :: Status
wai_useProxy305 = I.useProxy305

type WaiStatus  = I.Status

-- constructor :: Int -> ByteString -> Status
wai_mk'Status =  I.Status
pattern WaiStatus a b <-  I.Status a b
