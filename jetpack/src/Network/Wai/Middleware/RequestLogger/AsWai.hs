module Network.Wai.Middleware.RequestLogger.AsWai where
-- generated by https://github.com/rvion/ride/tree/master/jetpack-gen

import qualified Network.Wai.Middleware.RequestLogger as I

-- wai_logStdout :: Middleware
wai_logStdout = I.logStdout

-- wai_logStdoutDev :: Middleware
wai_logStdoutDev = I.logStdoutDev

-- wai_mkRequestLogger :: RequestLoggerSettings -> IO Middleware
wai_mkRequestLogger = I.mkRequestLogger

type WaiCallback  = I.Callback
type WaiDestination  = I.Destination
wai_mk'Handle =  I.Handle-- constructor
pattern WaiHandle a <-  I.Handle a
wai_mk'Logger =  I.Logger-- constructor
pattern WaiLogger a <-  I.Logger a
wai_mk'Callback =  I.Callback-- constructor
pattern WaiCallback a <-  I.Callback a
type WaiOutputFormat  = I.OutputFormat
wai_mk'Apache =  I.Apache-- constructor
pattern WaiApache a <-  I.Apache a
wai_mk'Detailed =  I.Detailed-- constructor
pattern WaiDetailed a <-  I.Detailed a
wai_mk'CustomOutputFormat =  I.CustomOutputFormat-- constructor
pattern WaiCustomOutputFormat a <-  I.CustomOutputFormat a
wai_mk'CustomOutputFormatWithDetails =  I.CustomOutputFormatWithDetails-- constructor
pattern WaiCustomOutputFormatWithDetails a <-  I.CustomOutputFormatWithDetails a
type WaiOutputFormatter  = I.OutputFormatter
type WaiOutputFormatterWithDetails  = I.OutputFormatterWithDetails
type WaiRequestLoggerSettings  = I.RequestLoggerSettings
type WaiIPAddrSource  = I.IPAddrSource
wai_mk'FromSocket =  I.FromSocket-- constructor
pattern WaiFromSocket  <-  I.FromSocket 
wai_mk'FromHeader =  I.FromHeader-- constructor
pattern WaiFromHeader  <-  I.FromHeader 
wai_mk'FromFallback =  I.FromFallback-- constructor
pattern WaiFromFallback  <-  I.FromFallback 
