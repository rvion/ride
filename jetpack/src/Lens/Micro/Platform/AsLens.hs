module Lens.Micro.Platform.AsLens where
-- generated by rvion/jetpack-gen 

import Lens.Micro.Platform as I

(&) = (I.&)
(%=) = (I.%=)
(*=) = (I.*=)
(+=) = (I.+=)
(-=) = (I.-=)
(.=) = (I..=)
(//=) = (I.//=)
lens_preview = I.preview
lens_use = I.use
lens_view = I.view
lens_camelCaseFields = I.camelCaseFields
lens_generateLazyPatterns = I.generateLazyPatterns
lens_generateSignatures = I.generateSignatures
lens_generateUpdateableOptics = I.generateUpdateableOptics
lens_lensField = I.lensField
lens_lensRules = I.lensRules
lens_lensRulesFor = I.lensRulesFor
lens_makeFields = I.makeFields
lens_makeLenses = I.makeLenses
lens_makeLensesFor = I.makeLensesFor
lens_makeLensesWith = I.makeLensesWith
lens_simpleLenses = I.simpleLenses
(%~) = (I.%~)
(.~) = (I..~)
(<%~) = (I.<%~)
(<<%~) = (I.<<%~)
(<<.~) = (I.<<.~)
(^.) = (I.^.)
(^..) = (I.^..)
(^?) = (I.^?)
(^?!) = (I.^?!)
lens__Just = I._Just
lens__Left = I._Left
lens__Nothing = I._Nothing
lens__Right = I._Right
lens__head = I._head
lens__init = I._init
lens__last = I._last
lens__tail = I._tail
lens_both = I.both
lens_failing = I.failing
lens_filtered = I.filtered
lens_has = I.has
lens_lens = I.lens
lens_mapped = I.mapped
lens_non = I.non
lens_over = I.over
lens_set = I.set
lens_to = I.to
lens_toListOf = I.toListOf
lens_folded = I.folded
lens_sets = I.sets
lens_traversed = I.traversed
